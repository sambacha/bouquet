{"version":3,"file":"Import.js","sourceRoot":"","sources":["../../ts/components/Import.tsx"],"names":[],"mappings":"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","sourcesContent":["import { batch, Signal, useSignal } from '@preact/signals'\nimport { utils } from 'ethers'\nimport { useState } from 'preact/hooks'\nimport { connectBrowserProvider, ProviderStore } from '../library/provider.js'\nimport { GetSimulationStackReply } from '../types/interceptorTypes.js'\nimport { Button } from './Button.js'\nimport { AppSettings, Bundle, serialize, Signers } from '../types/types.js'\nimport { EthereumAddress } from '../types/ethereumTypes.js'\nimport { TransactionList } from '../types/bouquetTypes.js'\nimport { ImportModal } from './ImportModal.js'\n\nexport async function importFromInterceptor(\n\tbundle: Signal<Bundle | undefined>,\n\tprovider: Signal<ProviderStore | undefined>,\n\tblockInfo: Signal<{\n\t\tblockNumber: bigint\n\t\tbaseFee: bigint\n\t\tpriorityFee: bigint\n\t}>,\n\tappSettings: Signal<AppSettings>,\n\tsigners: Signal<Signers> | undefined,\n) {\n\tif (!window.ethereum || !window.ethereum.request) throw Error('Import Error: No Ethereum wallet detected')\n\tconnectBrowserProvider(provider, appSettings, blockInfo, signers)\n\n\tconst { payload } = await window.ethereum\n\t\t.request({\n\t\t\tmethod: 'interceptor_getSimulationStack',\n\t\t\tparams: ['1.0.0'],\n\t\t})\n\t\t.catch((err: { code: number }) => {\n\t\t\tif (err?.code === -32601) {\n\t\t\t\tthrow new Error('Import Error: Wallet does not support returning simulations')\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Unknown Error: ${JSON.stringify(err)}`)\n\t\t\t}\n\t\t})\n\n\tconst tryParse = GetSimulationStackReply.safeParse(payload)\n\tif (!tryParse.success) throw new Error('Import Error: Wallet does not support returning simulations')\n\tconst parsed = tryParse.value\n\tif (parsed.length === 0) throw new Error('Import Error: You have no transactions on your simulation')\n\n\tconst converted = TransactionList.safeParse(serialize(GetSimulationStackReply, parsed).map(({ from, to, value, input, gasLimit, chainId }) => ({ from, to, value, input, gasLimit, chainId })))\n\tif (!converted.success) throw new Error('Import Error: Malformed simulation stack')\n\n\tlocalStorage.setItem('payload', JSON.stringify(TransactionList.serialize(converted.value)))\n\n\tconst containsFundingTx = parsed.length > 1 && parsed[0].to === parsed[1].from\n\tconst uniqueSigners = [...new Set(parsed.map((x) => utils.getAddress(serialize(EthereumAddress, x.from))))].filter(\n\t\t(_, index) => !(index === 0 && containsFundingTx),\n\t)\n\n\tconst totalGas = parsed.reduce((sum, tx, index) => (index === 0 && containsFundingTx ? 21000n : BigInt(tx.gasLimit.toString()) + sum), 0n)\n\t// @TODO: Change this to track minimum amount of ETH needed to deposit\n\tconst inputValue = parsed.reduce((sum, tx, index) => (index === 0 && containsFundingTx ? 0n : BigInt(tx.value.toString()) + sum), 0n)\n\n\tbundle.value = { transactions: converted.value, containsFundingTx, uniqueSigners, totalGas, inputValue }\n}\n\nexport const Import = ({\n\tbundle,\n\tprovider,\n\tblockInfo,\n\tsigners,\n\tappSettings,\n}: {\n\tbundle: Signal<Bundle | undefined>\n\tprovider: Signal<ProviderStore | undefined>\n\tblockInfo: Signal<{\n\t\tblockNumber: bigint\n\t\tbaseFee: bigint\n\t\tpriorityFee: bigint\n\t}>\n\tsigners: Signal<Signers>\n\tappSettings: Signal<AppSettings>\n}) => {\n\tconst showImportModal = useSignal<boolean>(false)\n\tconst [error, setError] = useState<string | undefined>(undefined)\n\n\tconst clearPayload = () => {\n\t\tbatch(() => {\n\t\t\tbundle.value = undefined\n\t\t\tlocalStorage.removeItem('payload')\n\t\t\tsigners.value.bundleSigners = {}\n\t\t\t// Keep burner wallet as long as it has funds, should clear is later if there is left over dust but not needed.\n\t\t\t// if (fundingAccountBalance.value === 0n) signers.value.burner = undefined\n\t\t})\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{showImportModal.value ? <ImportModal bundle={bundle} display={showImportModal} /> : null}\n\t\t\t<h2 className='font-bold text-2xl'>1. Import</h2>\n\t\t\t<div className='flex flex-col w-full gap-6'>\n\t\t\t\t<div className='flex flex-col sm:flex-row gap-4'>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => importFromInterceptor(bundle, provider, blockInfo, appSettings, signers).then(() => setError(undefined)).catch((err: Error) => setError(err.message))}\n\t\t\t\t\t>\n\t\t\t\t\t\tImport Payload from The Interceptor\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => showImportModal.value = true}\n\t\t\t\t\t>\n\t\t\t\t\t\tImport From JSON\n\t\t\t\t\t</Button>\n\t\t\t\t\t{bundle.value ? (\n\t\t\t\t\t\t<Button variant='secondary' onClick={clearPayload}>\n\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t{error ? <span className='text-lg text-error'>{error}</span> : ''}\n\t\t\t\t{error && error === 'Import Error: Wallet does not support returning simulations' ? (\n\t\t\t\t\t<h3 className='text-lg'>\n\t\t\t\t\t\tDon't have The Interceptor Installed? Install it here{' '}\n\t\t\t\t\t\t<a className='font-bold text-accent underline' href='https://dark.florist'>\n\t\t\t\t\t\t\there\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t.\n\t\t\t\t\t</h3>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n"]}